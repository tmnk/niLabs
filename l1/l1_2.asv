X = [ 2 2.3 0.4 -1.9 -3.2 -0.4 4.1 -5; ...
      -1.3 4.5 0.4 -4.3 -4.1 -5 1.4 -4.7];
T = [ 0 0 0 1 1 1 0 1;...
      1 0 0 0 0 1 1 0];
net = perceptron('hardlim', 'learnp');

firstX = X;
firstT = T;
net = configure(net, firstX, firstT);
view(net)
W = rand(1,7) * 10 - 5
net.IW{1,1} = [W(1:2); W(3:4)];
net.b{1} = W(2:3)';
net = init(net);
y = net1(firstX);
mae(firstT - y);
net.trainParam.epochs = 50;
[net,tr] = train(net1, firstX, firstT);  
plotpv(X,T), grid
plotpc(net.IW{1,1},net.b{1});
%%
net2 = perceptron('hardlim', 'learnp');
net2 = configure(net2, X(2,:), T(2,:));
net2.IW{1,1} = W(1);
net2.b{1} = W(2);
net2 = init(net2);
secondX = X(2,:);
secondT = T(2,:);
y = net2(secondX);
mae(secondT - y)
net2.trainParam.epochs = 50;
[net2,tr] = train(net2, secondX, secondT);
plotpv(X,T), grid
plt2_2 = plotpc([net2.IW{1,1}],net2.b{1});
plotpc([2 10],4);
